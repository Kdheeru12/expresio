{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-django-webrtc-group-video-app\\\\frontend\\\\src\\\\components\\\\navigation_bar\\\\NavigationBar.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\"; // Material UI components\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Tooltip from \"@material-ui/core/Tooltip\"; // Utility components, functions, constants, objects...\n\nimport { UserInfoContext, AVAILABLE_PATHS, ALL_PATH_TITLES } from \"../utilities\";\nimport navigationBarStyles from \"./navigation_bar_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePageTitle = () => {\n      const currentUrlPath = this.props.location.pathname;\n      const {\n        LOBBY_PATH,\n        LOGIN_PATH,\n        REGISTER_PATH\n      } = AVAILABLE_PATHS;\n      const {\n        LOBBY_TITLE,\n        LOGIN_TITLE,\n        REGISTER_TITLE\n      } = ALL_PATH_TITLES;\n      let pageTitle;\n\n      switch (currentUrlPath) {\n        case LOBBY_PATH:\n          pageTitle = LOBBY_TITLE;\n          break;\n\n        case LOGIN_PATH:\n          pageTitle = LOGIN_TITLE;\n          break;\n\n        case REGISTER_PATH:\n          pageTitle = REGISTER_TITLE;\n          break;\n\n        default:\n          pageTitle = \"404\";\n          break;\n      }\n\n      if (currentUrlPath.match(\"/video/\")) {\n        pageTitle = \"Room\";\n      }\n\n      this.setState({\n        pageTitle: pageTitle\n      });\n      return pageTitle;\n    };\n\n    this.handleMenuOpen = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.menuAction = event => {\n      const {\n        history,\n        authenticateUser,\n        printFeedback\n      } = this.props;\n      const {\n        menu\n      } = event.currentTarget.dataset;\n      const {\n        LOBBY_PATH,\n        LOGIN_PATH,\n        REGISTER_PATH\n      } = AVAILABLE_PATHS;\n      const {\n        LOBBY_TITLE,\n        LOGIN_TITLE,\n        REGISTER_TITLE,\n        LOGOUT_TITLE\n      } = ALL_PATH_TITLES;\n\n      if (menu && history) {\n        switch (menu) {\n          case LOBBY_TITLE:\n            history.push(LOBBY_PATH);\n            break;\n\n          case LOGIN_TITLE:\n            history.push(LOGIN_PATH);\n            break;\n\n          case REGISTER_TITLE:\n            history.push(REGISTER_PATH);\n            break;\n\n          case LOGOUT_TITLE:\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"refresh_token\");\n            authenticateUser();\n            printFeedback({\n              type: \"success\",\n              feedbackMsg: \"Logged out successfully\"\n            });\n            history.push(LOBBY_PATH);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.showComponents = () => {\n      this.changePageTitle();\n\n      if (this.props.location.pathname !== \"/\") {\n        this.setState({\n          isComponentShown: false\n        });\n      } else {\n        this.setState({\n          isComponentShown: true\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.showComponents();\n    };\n\n    this.state = {\n      anchorEl: null,\n      pageTitle: this.changePageTitle(),\n      isComponentShown: false\n    };\n  } // Title changes based on what url path user is on\n\n\n  // And if the route is changed\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.showComponents();\n      this.changePageTitle();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      openRoomForm,\n      search,\n      handleSearchChanges\n    } = this.props;\n    const {\n      anchorEl,\n      pageTitle,\n      isComponentShown\n    } = this.state;\n    const {\n      userFullName,\n      isUserLoggedIn\n    } = this.context;\n    const {\n      LOBBY_TITLE,\n      LOGIN_TITLE,\n      REGISTER_TITLE,\n      LOGOUT_TITLE\n    } = ALL_PATH_TITLES; // Menu items changes based on whether user is logged in or not\n\n    const menuItems = isUserLoggedIn ? [LOBBY_TITLE, LOGOUT_TITLE] : [LOBBY_TITLE, LOGIN_TITLE, REGISTER_TITLE];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        className: classes.appBar,\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.pageTitle,\n            variant: \"h6\",\n            children: pageTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), isComponentShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.search,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchIcon,\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              value: search,\n              onChange: handleSearchChanges,\n              placeholder: \"Search room title\\u2026\",\n              classes: {\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), isComponentShown ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Create Room\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: openRoomForm,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.username,\n            variant: \"subtitle1\",\n            children: userFullName && userFullName !== \"\" ? userFullName : \"Anonymous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Menu\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: this.handleMenuOpen,\n              edge: \"start\",\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            anchorEl: anchorEl,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: this.menuAction,\n            children: menuItems.map((items, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              \"data-menu\": items,\n              onClick: this.menuAction,\n              children: items\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavigationBar.contextType = UserInfoContext;\nexport default withRouter(withStyles(navigationBarStyles)(NavigationBar));","map":{"version":3,"sources":["D:/react-django-webrtc-group-video-app/frontend/src/components/navigation_bar/NavigationBar.jsx"],"names":["React","Component","withRouter","withStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","MenuItem","Menu","InputBase","SearchIcon","AddCircleOutlineIcon","Tooltip","UserInfoContext","AVAILABLE_PATHS","ALL_PATH_TITLES","navigationBarStyles","NavigationBar","constructor","props","changePageTitle","currentUrlPath","location","pathname","LOBBY_PATH","LOGIN_PATH","REGISTER_PATH","LOBBY_TITLE","LOGIN_TITLE","REGISTER_TITLE","pageTitle","match","setState","handleMenuOpen","event","anchorEl","currentTarget","menuAction","history","authenticateUser","printFeedback","menu","dataset","LOGOUT_TITLE","push","localStorage","removeItem","type","feedbackMsg","showComponents","isComponentShown","componentDidMount","state","componentDidUpdate","prevProps","render","classes","openRoomForm","search","handleSearchChanges","userFullName","isUserLoggedIn","context","menuItems","root","appBar","searchIcon","inputRoot","input","inputInput","username","vertical","horizontal","Boolean","map","items","index","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// Material UI components\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Utility components, functions, constants, objects...\r\nimport {\r\n  UserInfoContext,\r\n  AVAILABLE_PATHS,\r\n  ALL_PATH_TITLES,\r\n} from \"../utilities\";\r\nimport navigationBarStyles from \"./navigation_bar_styles\";\r\n\r\nclass NavigationBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      pageTitle: this.changePageTitle(),\r\n      isComponentShown: false,\r\n    };\r\n  }\r\n\r\n  // Title changes based on what url path user is on\r\n  changePageTitle = () => {\r\n    const currentUrlPath = this.props.location.pathname;\r\n    const { LOBBY_PATH, LOGIN_PATH, REGISTER_PATH } = AVAILABLE_PATHS;\r\n\r\n    const { LOBBY_TITLE, LOGIN_TITLE, REGISTER_TITLE } = ALL_PATH_TITLES;\r\n\r\n    let pageTitle;\r\n    switch (currentUrlPath) {\r\n      case LOBBY_PATH:\r\n        pageTitle = LOBBY_TITLE;\r\n        break;\r\n      case LOGIN_PATH:\r\n        pageTitle = LOGIN_TITLE;\r\n        break;\r\n      case REGISTER_PATH:\r\n        pageTitle = REGISTER_TITLE;\r\n        break;\r\n      default:\r\n        pageTitle = \"404\";\r\n        break;\r\n    }\r\n\r\n    if (currentUrlPath.match(\"/video/\")) {\r\n      pageTitle = \"Room\";\r\n    }\r\n    this.setState({\r\n      pageTitle: pageTitle,\r\n    });\r\n    return pageTitle;\r\n  };\r\n\r\n  static contextType = UserInfoContext;\r\n\r\n  // Method to open menu items\r\n  handleMenuOpen = (event) => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  };\r\n\r\n  // Logic to handle each menu item's action\r\n  menuAction = (event) => {\r\n    const { history, authenticateUser, printFeedback } = this.props;\r\n    const { menu } = event.currentTarget.dataset;\r\n    const { LOBBY_PATH, LOGIN_PATH, REGISTER_PATH } = AVAILABLE_PATHS;\r\n    const {\r\n      LOBBY_TITLE,\r\n      LOGIN_TITLE,\r\n      REGISTER_TITLE,\r\n      LOGOUT_TITLE,\r\n    } = ALL_PATH_TITLES;\r\n    if (menu && history) {\r\n      switch (menu) {\r\n        case LOBBY_TITLE:\r\n          history.push(LOBBY_PATH);\r\n          break;\r\n        case LOGIN_TITLE:\r\n          history.push(LOGIN_PATH);\r\n          break;\r\n        case REGISTER_TITLE:\r\n          history.push(REGISTER_PATH);\r\n          break;\r\n        case LOGOUT_TITLE:\r\n          localStorage.removeItem(\"access_token\");\r\n          localStorage.removeItem(\"refresh_token\");\r\n          authenticateUser();\r\n          printFeedback({\r\n            type: \"success\",\r\n            feedbackMsg: \"Logged out successfully\",\r\n          });\r\n          history.push(LOBBY_PATH);\r\n\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n  // Method to hide 'Search bar' and 'create room button' if url is not the default route\r\n  showComponents = () => {\r\n    this.changePageTitle();\r\n    if (this.props.location.pathname !== \"/\") {\r\n      this.setState({\r\n        isComponentShown: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isComponentShown: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  // This method fires when the component mounts\r\n  componentDidMount = () => {\r\n    this.showComponents();\r\n  };\r\n\r\n  // And if the route is changed\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.showComponents();\r\n      this.changePageTitle();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, openRoomForm, search, handleSearchChanges } = this.props;\r\n    const { anchorEl, pageTitle, isComponentShown } = this.state;\r\n    const { userFullName, isUserLoggedIn } = this.context;\r\n    const {\r\n      LOBBY_TITLE,\r\n      LOGIN_TITLE,\r\n      REGISTER_TITLE,\r\n      LOGOUT_TITLE,\r\n    } = ALL_PATH_TITLES;\r\n\r\n    // Menu items changes based on whether user is logged in or not\r\n    const menuItems = isUserLoggedIn\r\n      ? [LOBBY_TITLE, LOGOUT_TITLE]\r\n      : [LOBBY_TITLE, LOGIN_TITLE, REGISTER_TITLE];\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar className={classes.appBar} position=\"static\">\r\n          <Toolbar>\r\n            {/* Page Title */}\r\n            <Typography className={classes.pageTitle} variant=\"h6\">\r\n              {pageTitle}\r\n            </Typography>\r\n\r\n            {/* Search Bar */}\r\n            {isComponentShown ? (\r\n              <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                  value={search}\r\n                  onChange={handleSearchChanges}\r\n                  placeholder=\"Search room title…\"\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : null}\r\n\r\n            {/* Create room button */}\r\n            <div className={classes.root} />\r\n            {isComponentShown ? (\r\n              <Tooltip title=\"Create Room\">\r\n                <IconButton onClick={openRoomForm} color=\"inherit\">\r\n                  <AddCircleOutlineIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            {/* User full name */}\r\n            <Typography className={classes.username} variant=\"subtitle1\">\r\n              {userFullName && userFullName !== \"\" ? userFullName : \"Anonymous\"}\r\n            </Typography>\r\n\r\n            {/* Menus */}\r\n            <Tooltip title=\"Menu\">\r\n              <IconButton\r\n                onClick={this.handleMenuOpen}\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={this.menuAction}\r\n            >\r\n              {menuItems.map((items, index) => (\r\n                <MenuItem\r\n                  key={index}\r\n                  data-menu={items}\r\n                  onClick={this.menuAction}\r\n                >\r\n                  {items}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(navigationBarStyles)(NavigationBar));\r\n"]},"metadata":{},"sourceType":"module"}