{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-django-webrtc-group-video-app\\\\frontend\\\\src\\\\components\\\\lobby\\\\RoomForm\\\\CreateRoomForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\"; // Material UI components\n\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\"; // Utility components, functions, constants, objects...\n\nimport { roomFormValidationSchema, FormikUIField, FormikUISelect, UserInfoContext } from \"../../utilities\";\nimport createRoomFormStyles from \"./create_room_form_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateRoomForm extends Component {\n  constructor(props) {\n    super(props);\n    this.roomTypes = [{\n      value: \"OTA\",\n      label: \"Open to all\"\n    }, {\n      value: \"IO\",\n      label: \"Invite only\"\n    }];\n  }\n\n  render() {\n    const {\n      userId\n    } = this.context; // Instantiating form fields with pretty much empty values\n\n    let initialValues = {\n      user: userId,\n      title: \"\",\n      description: \"\",\n      typeOf: \"OTA\"\n    };\n    const {\n      classes,\n      onRoomFormSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.formPaper,\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onRoomFormSubmit,\n        validationSchema: roomFormValidationSchema,\n        children: _ref => {\n          let {\n            isValid,\n            dirty,\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h4\",\n              children: \"New Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormikUIField, {\n              name: \"title\",\n              label: \"Title\",\n              type: \"text\",\n              required: true,\n              fullWidth: true,\n              error: errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormikUIField, {\n              name: \"description\",\n              label: \"Event description\",\n              type: \"text\",\n              fullWidth: true,\n              error: errors.description,\n              multiline: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormikUISelect, {\n              name: \"typeOf\",\n              label: \"Room type\",\n              items: this.roomTypes,\n              error: errors.typeOf || touched.typeOf,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              disabled: !dirty || !isValid,\n              className: classes.createRoomBtn,\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"Create Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreateRoomForm.contextType = UserInfoContext;\nexport default withStyles(createRoomFormStyles)(CreateRoomForm);","map":{"version":3,"sources":["D:/react-django-webrtc-group-video-app/frontend/src/components/lobby/RoomForm/CreateRoomForm.jsx"],"names":["React","Component","Formik","Form","Button","Typography","Paper","withStyles","roomFormValidationSchema","FormikUIField","FormikUISelect","UserInfoContext","createRoomFormStyles","CreateRoomForm","constructor","props","roomTypes","value","label","render","userId","context","initialValues","user","title","description","typeOf","classes","onRoomFormSubmit","formPaper","isValid","dirty","errors","touched","createRoomBtn","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\n// Material UI components\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Utility components, functions, constants, objects...\r\nimport {\r\n  roomFormValidationSchema,\r\n  FormikUIField,\r\n  FormikUISelect,\r\n  UserInfoContext,\r\n} from \"../../utilities\";\r\nimport createRoomFormStyles from \"./create_room_form_styles\";\r\n\r\nclass CreateRoomForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.roomTypes = [\r\n      {\r\n        value: \"OTA\",\r\n        label: \"Open to all\",\r\n      },\r\n      {\r\n        value: \"IO\",\r\n        label: \"Invite only\",\r\n      },\r\n    ];\r\n  }\r\n  static contextType = UserInfoContext;\r\n  render() {\r\n    const { userId } = this.context;\r\n\r\n    // Instantiating form fields with pretty much empty values\r\n    let initialValues = {\r\n      user: userId,\r\n      title: \"\",\r\n      description: \"\",\r\n      typeOf: \"OTA\",\r\n    };\r\n\r\n    const { classes, onRoomFormSubmit } = this.props;\r\n\r\n    return (\r\n      <Paper className={classes.formPaper} elevation={3}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onRoomFormSubmit}\r\n          validationSchema={roomFormValidationSchema}\r\n        >\r\n          {({ isValid, dirty, errors, touched }) => (\r\n            <Form>\r\n              <Typography align=\"center\" variant=\"h4\">\r\n                New Room\r\n              </Typography>\r\n\r\n              {/* Title */}\r\n              <FormikUIField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                required\r\n                fullWidth\r\n                error={errors.title}\r\n              />\r\n\r\n              {/* Description */}\r\n              <FormikUIField\r\n                name=\"description\"\r\n                label=\"Event description\"\r\n                type=\"text\"\r\n                fullWidth\r\n                error={errors.description}\r\n                multiline\r\n                rows={4}\r\n              />\r\n\r\n              {/* Room type */}\r\n              <FormikUISelect\r\n                name=\"typeOf\"\r\n                label=\"Room type\"\r\n                items={this.roomTypes}\r\n                error={errors.typeOf || touched.typeOf}\r\n                required\r\n              />\r\n\r\n              <Button\r\n                fullWidth\r\n                disabled={!dirty || !isValid}\r\n                className={classes.createRoomBtn}\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n              >\r\n                Create Room\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(createRoomFormStyles)(CreateRoomForm);\r\n"]},"metadata":{},"sourceType":"module"}