{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-django-webrtc-group-video-app\\\\frontend\\\\src\\\\components\\\\video_room\\\\Video.jsx\";\nimport React, { Component } from \"react\"; // Material UI components\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\"; // Utility components, functions, constants, objects...\n\nimport videoRoomStyles from \"./video_room_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mouseHoverIn = () => {\n      this.setState({\n        isMouseHovering: true\n      });\n    };\n\n    this.mouseHoverOut = () => {\n      this.setState({\n        isMouseHovering: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      // remote stream is added to video tags\n      const {\n        peer,\n        user_id\n      } = this.props;\n\n      if (peer && user_id) {\n        peer.on(\"stream\", stream => {\n          document.getElementById(`remote-${user_id}`).srcObject = stream;\n        });\n      }\n    };\n\n    this.state = {\n      isMouseHovering: false\n    };\n  } // These Hover method is just for style purposes\n\n\n  render() {\n    const {\n      user_full_name,\n      id,\n      classes,\n      isLocalUser\n    } = this.props; // Style is changed if stream is local or remote\n\n    let videoDivClass;\n    let style;\n\n    if (isLocalUser) {\n      videoDivClass = classes.localVideoDiv;\n    } else {\n      videoDivClass = classes.remoteVideoDiv;\n\n      if (this.state.isMouseHovering) {\n        style = {\n          opacity: 1\n        };\n      } else {\n        style = {\n          opacity: 0\n        };\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseOver: this.mouseHoverIn,\n      onMouseOut: this.mouseHoverOut,\n      className: videoDivClass,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: classes.video,\n        id: id,\n        autoPlay: true,\n        muted: isLocalUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !isLocalUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        className: classes.userDetail,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          children: user_full_name ? user_full_name : \"Anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default withStyles(videoRoomStyles)(Video);","map":{"version":3,"sources":["D:/react-django-webrtc-group-video-app/frontend/src/components/video_room/Video.jsx"],"names":["React","Component","Typography","withStyles","videoRoomStyles","Video","constructor","props","mouseHoverIn","setState","isMouseHovering","mouseHoverOut","componentDidMount","peer","user_id","on","stream","document","getElementById","srcObject","state","render","user_full_name","id","classes","isLocalUser","videoDivClass","style","localVideoDiv","remoteVideoDiv","opacity","video","userDetail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,KAbkB;;AAAA,SAcnBC,aAdmB,GAcH,MAAM;AACpB,WAAKF,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,KAlBkB;;AAAA,SAmBnBE,iBAnBmB,GAmBC,MAAM;AACxB;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAoB,KAAKP,KAA/B;;AACA,UAAIM,IAAI,IAAIC,OAAZ,EAAqB;AACnBD,QAAAA,IAAI,CAACE,EAAL,CAAQ,QAAR,EAAmBC,MAAD,IAAY;AAC5BC,UAAAA,QAAQ,CAACC,cAAT,CAAyB,UAASJ,OAAQ,EAA1C,EAA6CK,SAA7C,GAAyDH,MAAzD;AACD,SAFD;AAGD;AACF,KA3BkB;;AAGjB,SAAKI,KAAL,GAAa;AACXV,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD,GAPkC,CASrC;;;AAqBEW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,EAAlB;AAAsBC,MAAAA,OAAtB;AAA+BC,MAAAA;AAA/B,QAA+C,KAAKlB,KAA1D,CADO,CAGP;;AACA,QAAImB,aAAJ;AACA,QAAIC,KAAJ;;AACA,QAAIF,WAAJ,EAAiB;AACfC,MAAAA,aAAa,GAAGF,OAAO,CAACI,aAAxB;AACD,KAFD,MAEO;AACLF,MAAAA,aAAa,GAAGF,OAAO,CAACK,cAAxB;;AAEA,UAAI,KAAKT,KAAL,CAAWV,eAAf,EAAgC;AAC9BiB,QAAAA,KAAK,GAAG;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAR;AACD,OAFD,MAEO;AACLH,QAAAA,KAAK,GAAG;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAR;AACD;AACF;;AAED,wBACE;AACE,MAAA,WAAW,EAAE,KAAKtB,YADpB;AAEE,MAAA,UAAU,EAAE,KAAKG,aAFnB;AAGE,MAAA,SAAS,EAAEe,aAHb;AAAA,8BAKE;AACE,QAAA,SAAS,EAAEF,OAAO,CAACO,KADrB;AAEE,QAAA,EAAE,EAAER,EAFN;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEE;AAJT;AAAA;AAAA;AAAA;AAAA,cALF,EAYG,CAACA,WAAD,gBACC;AAAK,QAAA,KAAK,EAAEE,KAAZ;AAAmB,QAAA,SAAS,EAAEH,OAAO,CAACQ,UAAtC;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAAA,oBACGV,cAAc,GAAGA,cAAH,GAAoB;AADrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAMG,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAtEkC;AAyErC,eAAenB,UAAU,CAACC,eAAD,CAAV,CAA4BC,KAA5B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// Material UI components\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Utility components, functions, constants, objects...\r\nimport videoRoomStyles from \"./video_room_styles\";\r\n\r\nexport class Video extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMouseHovering: false,\r\n    };\r\n  }\r\n\r\n// These Hover method is just for style purposes\r\n  mouseHoverIn = () => {\r\n    this.setState({\r\n      isMouseHovering: true,\r\n    });\r\n  };\r\n  mouseHoverOut = () => {\r\n    this.setState({\r\n      isMouseHovering: false,\r\n    });\r\n  };\r\n  componentDidMount = () => {\r\n    // remote stream is added to video tags\r\n    const { peer, user_id } = this.props;\r\n    if (peer && user_id) {\r\n      peer.on(\"stream\", (stream) => {\r\n        document.getElementById(`remote-${user_id}`).srcObject = stream;\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user_full_name, id, classes, isLocalUser } = this.props;\r\n\r\n    // Style is changed if stream is local or remote\r\n    let videoDivClass;\r\n    let style;\r\n    if (isLocalUser) {\r\n      videoDivClass = classes.localVideoDiv;\r\n    } else {\r\n      videoDivClass = classes.remoteVideoDiv;\r\n\r\n      if (this.state.isMouseHovering) {\r\n        style = { opacity: 1 };\r\n      } else {\r\n        style = { opacity: 0 };\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onMouseOver={this.mouseHoverIn}\r\n        onMouseOut={this.mouseHoverOut}\r\n        className={videoDivClass}\r\n      >\r\n        <video\r\n          className={classes.video}\r\n          id={id}\r\n          autoPlay\r\n          muted={isLocalUser}\r\n        ></video>\r\n\r\n        {!isLocalUser ? (\r\n          <div style={style} className={classes.userDetail}>\r\n            <Typography variant=\"overline\">\r\n              {user_full_name ? user_full_name : \"Anonymous\"}\r\n            </Typography>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(videoRoomStyles)(Video);\r\n"]},"metadata":{},"sourceType":"module"}