{"ast":null,"code":"import axios from \"axios\"; // Utility functions, constants, objects...\n\nimport { BASE_API_URL } from \"./CONSTANTS\";\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nconst csrftoken = getCookie(\"csrftoken\");\nconst axiosInstance = axios.create({\n  baseURL: BASE_API_URL,\n  timeout: 5000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n    \"X-CSRFToken\": csrftoken,\n    Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n  }\n});\nexport default axiosInstance;\nexport const getRoomsList = function (axiosInstance) {\n  let search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  delete axiosInstance.defaults.headers[\"Authorization\"];\n\n  if (search !== \"\") {\n    return axiosInstance.get(`rooms/?search=${search}`);\n  }\n\n  return axiosInstance.get(\"rooms/\");\n};\nexport const validateToken = (axiosInstance, token) => {\n  return axiosInstance.post(\"token/verify/\", {\n    token: token\n  });\n};\nexport const refreshingAccessToken = () => {\n  const access_token = localStorage.getItem(\"access_token\");\n  validateToken(axiosInstance, access_token).then(response => {\n    if (response.status === 200) {\n      axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + access_token;\n    }\n  }).catch(error => {\n    const refresh_token = localStorage.getItem(\"refresh_token\");\n\n    if ((error.response.status === 400 || error.response.status === 401) && refresh_token) {\n      axiosInstance.post(\"token/refresh/\", {\n        refresh: refresh_token\n      }).then(_ref => {\n        let {\n          status,\n          data\n        } = _ref;\n\n        if (status === 200) {\n          localStorage.setItem(\"access_token\", data.access);\n          axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + data.access;\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n  });\n};","map":{"version":3,"sources":["D:/react-django-webrtc-group-video-app/frontend/src/components/utilities/axios.jsx"],"names":["axios","BASE_API_URL","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","csrftoken","axiosInstance","create","baseURL","timeout","headers","accept","Authorization","localStorage","getItem","getRoomsList","search","defaults","get","validateToken","token","post","refreshingAccessToken","access_token","then","response","status","catch","error","refresh_token","refresh","data","setItem","access","err","console","log","message"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n// Utility functions, constants, objects...\r\nimport { BASE_API_URL } from \"./CONSTANTS\";\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    const cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\nconst csrftoken = getCookie(\"csrftoken\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n    \"X-CSRFToken\": csrftoken,\r\n    Authorization: \"Bearer \" + localStorage.getItem(\"access_token\"),\r\n  },\r\n});\r\nexport default axiosInstance;\r\n\r\nexport const getRoomsList = (axiosInstance, search = \"\") => {\r\n  delete axiosInstance.defaults.headers[\"Authorization\"];\r\n\r\n  if (search !== \"\") {\r\n    return axiosInstance.get(`rooms/?search=${search}`);\r\n  }\r\n\r\n  return axiosInstance.get(\"rooms/\");\r\n};\r\n\r\nexport const validateToken = (axiosInstance, token) => {\r\n  return axiosInstance.post(\"token/verify/\", {\r\n    token: token,\r\n  });\r\n};\r\n\r\nexport const refreshingAccessToken = () => {\r\n  const access_token = localStorage.getItem(\"access_token\");\r\n  validateToken(axiosInstance, access_token)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"Bearer \" + access_token;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      const refresh_token = localStorage.getItem(\"refresh_token\");\r\n      if (\r\n        (error.response.status === 400 || error.response.status === 401) &&\r\n        refresh_token\r\n      ) {\r\n        axiosInstance\r\n          .post(\"token/refresh/\", {\r\n            refresh: refresh_token,\r\n          })\r\n          .then(({ status, data }) => {\r\n            if (status === 200) {\r\n              localStorage.setItem(\"access_token\", data.access);\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"Bearer \" + data.access;\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      }\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}