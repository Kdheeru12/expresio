{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-django-webrtc-group-video-app\\\\frontend\\\\src\\\\components\\\\lobby\\\\Room.jsx\";\nimport React, { Component } from \"react\"; // Material UI components\n\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { withStyles } from \"@material-ui/core/styles\"; // Utility components, functions, constants, objects...\n\nimport { UserInfoContext } from \"../utilities/components/UserInfoProvider\";\nimport roomStyles from \"./room_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyRoomUrl = databaseId => {\n      const roomInput = document.getElementById(`room-data-base${databaseId}`);\n      roomInput.select();\n      document.execCommand(\"copy\");\n      this.props.printFeedback({\n        type: \"success\",\n        feedbackMsg: \"Link copied\"\n      });\n    };\n\n    this.renderRoomType = this.renderRoomType.bind(this);\n  } // User information\n\n\n  // Render room types based on initial acquired from database\n  renderRoomType(roomTypeKeyWord) {\n    switch (roomTypeKeyWord) {\n      case \"OTA\":\n        return \"Open to All\";\n\n      case \"IO\":\n        return \"Invite only\";\n\n      default:\n        return \"unrecognized room type\";\n    }\n  } // Copy room url to clipboard\n\n\n  render() {\n    const {\n      apiData: {\n        id,\n        title,\n        description,\n        typeOf,\n        createdOn,\n        roomId,\n        user\n      },\n      classes,\n      deleteRoom,\n      enterRoom\n    } = this.props;\n    const {\n      userId\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 39\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.heading,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.secondaryHeading,\n          children: this.renderRoomType(typeOf)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.gridItemA,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontWeight: \"bolder\"\n              },\n              gutterBottom: true,\n              variant: \"h5\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              style: {\n                color: \"gray\"\n              },\n              children: [\"created on \", createdOn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.gridItemB,\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              fullWidth: true,\n              size: \"small\",\n              orientation: \"vertical\",\n              variant: \"contained\",\n              children: [userId === user ? /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  transition: \"0.5s\"\n                },\n                color: \"secondary\",\n                onClick: () => deleteRoom(id),\n                children: \"Delete Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this) : null, typeOf !== \"IO\" ? /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.enterBtn,\n                onClick: () => enterRoom(roomId),\n                color: \"primary\",\n                children: \"Enter Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this) : userId === user ? /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.enterBtn,\n                onClick: () => enterRoom(roomId),\n                color: \"primary\",\n                children: \"Enter Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.gridItemC,\n            children: userId === user && typeOf === \"IO\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                size: \"small\",\n                id: `room-data-base${id}`,\n                defaultValue: window.location.origin + `/video/${roomId}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  transition: \"0.5s\"\n                },\n                fullWidth: true,\n                color: \"secondary\",\n                size: \"small\",\n                onClick: () => this.copyRoomUrl(id),\n                children: \"Copy room link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nRoom.contextType = UserInfoContext;\nexport default withStyles(roomStyles)(Room);","map":{"version":3,"sources":["D:/react-django-webrtc-group-video-app/frontend/src/components/lobby/Room.jsx"],"names":["React","Component","Typography","TextField","Button","ButtonGroup","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","withStyles","UserInfoContext","roomStyles","Room","constructor","props","copyRoomUrl","databaseId","roomInput","document","getElementById","select","execCommand","printFeedback","type","feedbackMsg","renderRoomType","bind","roomTypeKeyWord","render","apiData","id","title","description","typeOf","createdOn","roomId","user","classes","deleteRoom","enterRoom","userId","context","heading","secondaryHeading","gridContainer","gridItemA","fontWeight","color","gridItemB","transition","enterBtn","gridItemC","window","location","origin","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// Material UI components\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Utility components, functions, constants, objects...\r\nimport { UserInfoContext } from \"../utilities/components/UserInfoProvider\";\r\nimport roomStyles from \"./room_styles\";\r\n\r\nclass Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderRoomType = this.renderRoomType.bind(this);\r\n  }\r\n\r\n  // User information\r\n  static contextType = UserInfoContext;\r\n\r\n  // Render room types based on initial acquired from database\r\n  renderRoomType(roomTypeKeyWord) {\r\n    switch (roomTypeKeyWord) {\r\n      case \"OTA\":\r\n        return \"Open to All\";\r\n      case \"IO\":\r\n        return \"Invite only\";\r\n      default:\r\n        return \"unrecognized room type\";\r\n    }\r\n  }\r\n\r\n  // Copy room url to clipboard\r\n  copyRoomUrl = (databaseId) => {\r\n    const roomInput = document.getElementById(`room-data-base${databaseId}`);\r\n    roomInput.select();\r\n    document.execCommand(\"copy\");\r\n    this.props.printFeedback({ type: \"success\", feedbackMsg: \"Link copied\" });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      apiData: { id, title, description, typeOf, createdOn, roomId, user },\r\n      classes,\r\n      deleteRoom,\r\n      enterRoom,\r\n    } = this.props;\r\n    const { userId } = this.context;\r\n    return (\r\n      <Accordion>\r\n        {/* Head */}\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>{title}</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            {this.renderRoomType(typeOf)}\r\n          </Typography>\r\n        </AccordionSummary>\r\n\r\n        {/* Description */}\r\n        <AccordionDetails>\r\n          <div className={classes.gridContainer}>\r\n            <div className={classes.gridItemA}>\r\n              <Typography\r\n                style={{ fontWeight: \"bolder\" }}\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography variant=\"caption\" style={{ color: \"gray\" }}>\r\n                created on {createdOn}\r\n              </Typography>\r\n              <Typography variant=\"body1\">{description}</Typography>\r\n            </div>\r\n\r\n            <div className={classes.gridItemB}>\r\n              <ButtonGroup\r\n                fullWidth\r\n                size=\"small\"\r\n                orientation=\"vertical\"\r\n                variant=\"contained\"\r\n              >\r\n                {/* Delete button is only shown if the room belongs to current user */}\r\n                {userId === user ? (\r\n                  <Button\r\n                    style={{ transition: \"0.5s\" }}\r\n                    color=\"secondary\"\r\n                    onClick={() => deleteRoom(id)}\r\n                  >\r\n                    Delete Room\r\n                  </Button>\r\n                ) : null}\r\n\r\n                {/* 'Invite Only' type have there enter button not shown */}\r\n                {typeOf !== \"IO\" ? (\r\n                  <Button\r\n                    className={classes.enterBtn}\r\n                    onClick={() => enterRoom(roomId)}\r\n                    color=\"primary\"\r\n                  >\r\n                    Enter Room\r\n                  </Button>\r\n                ) : userId === user ? (\r\n                  <Button\r\n                    className={classes.enterBtn}\r\n                    onClick={() => enterRoom(roomId)}\r\n                    color=\"primary\"\r\n                  >\r\n                    Enter Room\r\n                  </Button>\r\n                ) : null}\r\n              </ButtonGroup>\r\n            </div>\r\n\r\n            {/* Copy Room Url */}\r\n            <div className={classes.gridItemC}>\r\n              {userId === user && typeOf === \"IO\" ? (\r\n                <>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    id={`room-data-base${id}`}\r\n                    defaultValue={window.location.origin + `/video/${roomId}`}\r\n                  />\r\n                  <Button\r\n                    style={{ transition: \"0.5s\" }}\r\n                    fullWidth\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={() => this.copyRoomUrl(id)}\r\n                  >\r\n                    Copy room link\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(roomStyles)(Room);\r\n"]},"metadata":{},"sourceType":"module"}